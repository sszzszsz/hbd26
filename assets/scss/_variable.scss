//Color
$brown_pale1: #fdfaf3;
$brown_pale2: #fdfcf3;
$brown_pale3: #d3cfc5;

$brown_dark1: #928d82;
$brown_dark2: #6c655d;

//padding
$cont_pad: '15px';

@mixin stripe($color1: $brown_pale1, $color2: $brown_dark1) {
  background-image: linear-gradient(
    45deg,
    $color1 25%,
    $color2 25%,
    $color2 50%,
    $color1 50%,
    $color1 75%,
    $color2 75%,
    $color2 100%
  );
  background-size: 27.8px 28.8px;
}

$breakpoint-sm: 375px !default;
$breakpoint-md: 768px !default;
$breakpoint-lg: 1024px !default;

$pcWidth: $breakpoint-md;
$spWidth: $breakpoint-sm;
@function pcvw($num, $width: $pcWidth) {
  @return (1vw * $num / $width * 100);
}

@function spvw($num, $width: $spWidth) {
  @return (1vw * $num / $width * 100);
}

@function pcfz($size, $viewport: $pcWidth) {
  $rate: 100 / $viewport;
  @return $rate * $size * 1vw;
}
@function spfz($size, $viewport: $spWidth) {
  $rate: 100 / $viewport;
  @return $rate * $size * 1vw;
}

// FONT
@mixin notosans-m() {
  font-family: 'Noto Sans JP', sans-serif;
  font-weight: 500;
}

@mixin notosans-b() {
  font-family: 'Noto Sans JP', sans-serif;
  font-weight: 600;
}
@mixin josefin-m() {
  font-family: 'Josefin Sans', sans-serif;
  font-weight: 500;
}
@mixin josefin-b() {
  font-family: 'Josefin Sans', sans-serif;
  font-weight: 700;
}
@mixin josefin-b-i() {
  font-family: 'Josefin Sans', sans-serif;
  font-weight: 700;
  font-style: italic;
}

// 指定した最小値($min)と最大値($max)の間のランダムな数を返す
// 単位は$unitに指定（px,%,vw,vh,vmax,vmin）
// minMaxRandom(80, 100, 1%)
@function minMaxRandom($min: 1, $max: 100, $unit: 1%) {
  $num: random($max);

  @while ($num/($num * 0 + 1) < $min) {
    $num: random($max);
  }
  @return $num * $unit;
}
@function minMaxRandom2($min: 1, $max: 100, $unit: 1s) {
  $num: random($max);

  @while ($num/($num * 0 + 1) < $min) {
    $num: random($max);
  }
  @return $num * $unit;
}

// マップ型の変数で定義
$breakpoints: (
  'sm': 'screen and (min-width: 375px)',
  'md': 'screen and (min-width: 768px)',
  'lg': 'screen and (min-width: 1024px)',
  'xl': 'screen and (min-width: 1366px)',
) !default;

// map-get()の第一引数に変数名、第二引数にマップ型のキーを渡すと、マップ型の値が返る
// @include mq()
@mixin mq($breakpoint: md) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}
